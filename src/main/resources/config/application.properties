
spring.profiles.active=@activatedProperties@
app.version=@project.version@

spring.application.name=digital-document-clients
server.port=8082

management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=actuator/health

spring.main.allow-bean-definition-overriding=true

spring.cloud.enabled=false
health.config.enabled=false
log4j2.formatMsgNoLookups=true

logging.pattern.console= {\"@timestamp\": \"%d\", \"level\": \"%p\", \"x-correlation-id\": \"%X{X-Correlation-Id}\", \"source\": \"%logger{63}:%L\", \"message\": \"%replace(%m%wEx{6}){'[\r\n]+', '\\n'}%nopex\", \"stacktrace\": \"%ex\"}%n

## Banco de dados
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.javax.persistence.query.timeout=30000
spring.datasource.platform=postgres
spring.datasource.driverClassName=org.postgresql.Driver

#Kafka

kafka.group.id=DIGITAL_DOCUMENT_GROUP
kafka.topic.signed-client=TEXT_CLIENT
kafka.ssl.key-store-location=${KAFKA_SSL_KEY_STORE_LOCATION}
kafka.ssl.trust-store-location=${KAFKA_SSL_TRUST_STORE_LOCATION}

#Swagger
api.swagger.title=Digital Document clients
api.swagger.description=Microservico de clients
springdoc.packagesToScan=com.sistema.clients.controller
springdoc.pathsToMatch=/v1/**, /v2/**

#Redis
redis.host=
redis.port=6379
multiple.request.time.life=10
send.otp.time.life=15

## Resilience4j ##
resilience4j.retry.instances.clientsDBRetry.maxRetryAttempts: 2
resilience4j.retry.instances.clientsDBRetry.waitDuration: 30s



